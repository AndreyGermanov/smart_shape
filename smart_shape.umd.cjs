(function(h,r){typeof exports=="object"&&typeof module<"u"?module.exports=r():typeof define=="function"&&define.amd?define(r):(h=typeof globalThis<"u"?globalThis:h||self,h.SmartShape=r())})(this,function(){"use strict";function h(t){return this.shape=null,this.options={id:"",width:10,height:10,classes:"",style:{borderWidth:"1px",borderStyle:"solid",borderColor:"black",borderRadius:"25px",position:"absolute",cursor:"pointer",backgroundColor:"red"},canDrag:!0,canDelete:!0,zIndex:1e3},this.x=0,this.y=0,this.element=null,this.init=(i,s,e=null)=>(this.x=i,this.y=s,this.shape=t,this.element=this.createPointUI(),this.setOptions(this.shape.options.pointOptions),this.setOptions(e),this.addEventListeners(),this.shape.onPointEvent("point_added",this),this),this.setOptions=i=>{i&&typeof i=="object"&&(i.style&&typeof i.style=="object"&&(i.style=Object.assign(this.options.style,i.style)),Object.assign(this.options,i)),this.options.id&&(this.element.id=this.options.id),this.shape.options.zIndex&&(this.options.zIndex=this.shape.options.zIndex+1),this.element=this.setPointStyles(this.element)},this.createPointUI=()=>{const i=document.createElement("div");return this.shape.options.canDragPoints?this.setPointStyles(i):i},this.setPointStyles=(i=null)=>{if(i==null&&(i=this.element),!this.shape.options.canDragPoints)return i;if(this.options.id&&(i.id=this.options.id),i.className=this.options.classes,i.style=this.options.style,typeof this.options.style=="object")for(let s in this.options.style)i.style[s]=this.options.style[s];return i.style.width=this.options.width+"px",i.style.height=this.options.height+"px",i.style.left=this.x-parseInt(this.options.width/2)+"px",i.style.top=this.y-parseInt(this.options.height/2)+"px",i.style.zIndex=this.options.zIndex,i},this.redraw=()=>{this.setPointStyles(),this.element.style.left=this.x-parseInt(this.options.width/2)+"px",this.element.style.top=this.y-parseInt(this.options.height/2)+"px"},this.addEventListeners=()=>{this.element.addEventListener("mouseup",this.mouseup),this.element.addEventListener("mousedown",this.mousedown)},this.mousedown=i=>{i.buttons===1&&this.shape.options.canDragPoints&&this.options.canDrag&&(i.preventDefault=!0,i.stopPropagation(),this.shape.onPointEvent("point_dragstart",this))},this.mousemove=i=>{if(i.buttons!==1||!this.shape.options.canDragPoints||!this.options.canDrag)return;const s=this.x+i.movementX,e=this.y+i.movementY,o=this.shape.root;if(s<0||s>o.clientLeft+o.clientWidth){this.shape.onPointEvent("point_drag",this),this.shape.draggedPoint=null;return}if(e<0||e>o.clientTop+o.clientHeight){this.shape.onPointEvent("point_drag",this),this.shape.draggedPoint=null;return}this.x+=i.movementX,this.y+=i.movementY,this.element.style.left=this.x-5+"px",this.element.style.top=this.y-5+"px",this.shape.onPointEvent("point_drag",this)},this.mouseup=i=>{this.shape.onPointEvent("point_dragend",this),i.button===2&&this.shape.options.canDeletePoints&&this.options.canDelete&&this.destroy()},this.destroy=()=>{this.element.removeEventListener("mouseup",this.mouseup),this.element.removeEventListener("mousedown",this.mousedown),this.shape.onPointEvent("point_destroyed",this)},this}const r=(t,i=!0)=>{let s=0,e=0;if(!i)return{top:t.offsetTop-t.scrollTop,left:t.offsetLeft-t.scrollLeft};for(;t&&!isNaN(t.offsetLeft)&&!isNaN(t.offsetTop);)s+=t.offsetLeft-t.scrollLeft,e+=t.offsetTop-t.scrollTop,t=t.offsetParent;return{top:e,left:s}},a=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var i=Math.random()*16|0,s=t=="x"?i:i&3|8;return s.toString(16)}).replace(/\-/g,"");function d(){this.root=null,this.points=[],this.svg=null,this.options={id:"",name:"Unnamed shape",maxPoints:-1,stroke:"rgb(0,0,0)",strokeWidth:"2",strokeLinecap:"",strokeDasharray:"",fill:"none",fillGradient:null,fillImage:null,fillOpacity:"1",canDragShape:!0,canDragPoints:!0,canAddPoints:!1,canDeletePoints:!1,offsetX:0,offsetY:0,classes:"",style:{},pointOptions:{},zIndex:1e3},this.left=0,this.top=0,this.right=0,this.bottom=0,this.width=0,this.height=0,this.guid=a(),this.init=(t,i=null,s=null)=>{if(!t){console.error("Root HTML node not specified. Could not create shape.");return}return this.root=t,this.root.style.position="relative",this.draggedPoint=null,this.root.draggedShape=null,this.setOptions(i),this.addEventListeners(),this.setupPoints(s,this.options.pointOptions),this},this.setOptions=t=>{t&&typeof t=="object"&&(t.pointOptions&&typeof t.pointOptions=="object"&&(t.pointOptions=Object.assign(this.options.pointOptions,t.pointOptions)),t.style&&typeof t.style=="object"&&(t.style=Object.assign(this.options.style,t.style)),Object.assign(this.options,t))},this.addEventListeners=()=>{this.root.getAttribute("sh_listeners")!=="true"&&(this.root.setAttribute("sh_listeners","true"),this.root.addEventListener("mousemove",t=>{this.root.draggedShape&&this.root.draggedShape.mousemove(t)}),this.root.addEventListener("mouseup",this.mouseup),this.root.addEventListener("dblclick",this.doubleclick)),this.nocontextmenu=this.root.addEventListener("contextmenu",t=>t.preventDefault())},this.setupPoints=(t,i)=>{typeof t=="object"&&(this.points=[],this.addPoints(t,i))},this.addPoint=(t,i,s=null)=>{const e=this.putPoint(t,i,s);return this.redraw(),e},this.addPoints=(t,i=null)=>{!t||typeof t!="object"||(t.forEach(s=>this.putPoint(s[0]+this.options.offsetX,s[1]+this.options.offsetY,i)),this.redraw())},this.putPoint=(t,i,s=null)=>{if(this.findPoint(t,i))return console.error(`Point with x=${t} and y=${i} already exists`),null;const e=new h(this).init(t,i,s);return this.points.push(e),this.root.appendChild(e.element),e},this.deletePoint=(t,i)=>{const s=this.findPoint(t,i);s&&s.destroy()},this.findPoint=(t,i)=>{const s=this.points.find(e=>e.x===t&&e.y===i);return typeof s>"u"||!s?null:s},this.onPointEvent=(t,i)=>{switch(t){case"point_destroyed":this.points.splice(this.points.indexOf(i),1),this.root.removeChild(i.element),this.redraw();break;case"point_drag":this.redraw();break;case"point_dragstart":this.root.draggedShape=this,this.draggedPoint=i;break;case"point_dragend":this.root.draggedShape=null,this.draggedPoint=null}},this.redraw=()=>{if(this.svg&&(this.root.removeChild(this.svg),this.svg=null),this.points.length<1)return;if(this.calcPosition(),this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.id=this.options.id,this.svg.style.position="absolute",this.svg.style.cursor="crosshair",this.svg.style.left=this.left,this.svg.style.top=this.top,this.svg.setAttribute("width",this.width),this.svg.setAttribute("height",this.height),this.options.fillImage&&typeof(this.options.fillImage==="object")){const i=document.createElementNS(this.svg.namespaceURI,"defs"),s=this.createImageFill(this.options.fillImage);s&&i.appendChild(s),this.svg.appendChild(i)}else if(this.options.fillGradient&&typeof(this.options.fillGradient==="object")&&["linear","radial"].indexOf(this.options.fillGradient.type)!==-1){const i=document.createElementNS(this.svg.namespaceURI,"defs"),s=this.createGradient(this.options.fillGradient);i.appendChild(s),this.svg.appendChild(i)}this.svg.style.zIndex=this.options.zIndex;const t=this.drawPolygon();this.svg.appendChild(t),this.root.appendChild(this.svg),this.svg.addEventListener("mousedown",this.mousedown),this.points.forEach(i=>{i.setOptions(this.options.pointOptions),i.setPointStyles(),i.redraw()})},this.drawPolygon=()=>{let t=document.createElementNS("http://www.w3.org/2000/svg","polyline");this.points.length>2&&(t=document.createElementNS("http://www.w3.org/2000/svg","polygon"));const i=this.points.map(s=>""+(s.x-this.left)+","+(s.y-this.top)).join(" ");if(t.setAttribute("points",i),this.options.stroke&&t.setAttribute("stroke",this.options.stroke),this.options.strokeWidth&&t.setAttribute("stroke-width",this.options.strokeWidth),this.options.strokeLinecap&&t.setAttribute("stroke-linecap",this.options.strokeLinecap),this.options.strokeDasharray&&t.setAttribute("stroke-dasharray",this.options.strokeDasharray),this.options.fill&&(this.options.fillImage&&typeof this.options.fillImage=="object"?t.setAttribute("fill",'url("#'+this.guid+'_pattern")'):this.options.fillGradient&&typeof(this.options.fillGradient==="object")&&["linear","radial"].indexOf(this.options.fillGradient.type)!==-1?t.setAttribute("fill",'url("#'+this.guid+'_gradient")'):t.setAttribute("fill",this.options.fill)),this.options.fillOpacity&&t.setAttribute("fill-opacity",this.options.fillOpacity),this.options.classes&&t.setAttribute("class",this.options.classes),this.options.style)for(let s in this.options.style)t.style[s]=this.options.style[s];return t.style.zIndex=this.options.zIndex,t},this.createGradient=t=>{let i=document.createElementNS(this.svg.namespaceURI,"linearGradient");t.type==="radial"&&(i=document.createElementNS(this.svg.namespaceURI,"radialGradient")),i.id=this.guid+"_gradient";let s=!1;for(let e in t)if(e!=="type"){if(e==="steps"){s=!0;continue}i.setAttribute(e,t[e])}if(!s)return i;for(let e of t.steps){const o=document.createElementNS(this.svg.namespaceURI,"stop");o.setAttribute("offset",e.offset),o.setAttribute("stop-color",e.stopColor),o.setAttribute("stop-opacity",e.stopOpacity),i.appendChild(o)}return i},this.createImageFill=t=>{if(!t.href||!t.width||!t.height)return console.error("Image HREF, width and height must be specified for Image Fill"),null;const i=document.createElementNS(this.svg.namespaceURI,"pattern");i.setAttribute("id",this.guid+"_pattern"),i.setAttribute("patternUnits","userSpaceOnUse");for(let e in t)e!=="href"&&i.setAttribute(e,t[e]);const s=document.createElementNS(this.svg.namespaceURI,"image");return s.setAttribute("href",t.href),s.setAttribute("width",t.width),s.setAttribute("height",t.height),i.appendChild(s),i},this.calcPosition=()=>{this.left=this.points.map(t=>t.x).reduce((t,i)=>i<t?i:t),this.top=this.points.map(t=>t.y).reduce((t,i)=>i<t?i:t),this.right=this.points.map(t=>t.x).reduce((t,i)=>i>t?i:t),this.bottom=this.points.map(t=>t.y).reduce((t,i)=>i>t?i:t),this.width=this.right-this.left,this.height=this.bottom-this.top},this.destroy=()=>{this.points.forEach(t=>{this.root.removeChild(t.element)}),this.root.removeEventListener("contextmenu",this.nocontextmenu),this.root.removeEventListener("mouseup",this.mouseup),this.points=[],this.redraw()},this.mouseup=t=>{t.buttons===1&&this.options.canAddPoints&&!this.draggedPoint&&(this.options.maxPoints===-1||this.points.length<this.options.maxPoints)&&this.addPoint(t.clientX-this.root.offsetLeft,t.clientY-this.root.offsetTop),this.root.draggedShape&&(this.root.draggedShape.draggedPoint=null,this.root.draggedShape=null)},this.doubleclick=t=>{t.stopPropagation(),this.options.canAddPoints&&!this.draggedPoint&&(this.options.maxPoints===-1||this.points.length<this.options.maxPoints)&&this.addPoint(t.clientX-this.root.offsetLeft,t.clientY-this.root.offsetTop)},this.mousedown=t=>{this.root.draggedShape=this},this.mousemove=t=>{if(t.buttons!==1)return;if(this.draggedPoint){this.draggedPoint.mousemove(t);return}if(!this.options.canDragShape)return;const[i,s]=this.calcMovementOffset(t);if(!(i===null||s===null)){for(let e in this.points)this.points[e].x+=i,this.points[e].y+=s,this.points[e].redraw();this.redraw()}},this.calcMovementOffset=t=>{this.calcPosition();let i=t.movementX,s=t.movementY,e=t.clientX,o=t.clientY;const p=this.left+i,l=this.top+s,n=r(this.root,!0);return p<0||p+this.width>this.root.clientLeft+this.root.clientWidth?[null,null]:l<0||l+this.height>this.root.clientTop+this.root.clientHeight?[null,null]:(e<p+n.left&&(i=e-(p+n.left)),o<l+n.top&&(s=o-(l+n.top)),e>p+this.width+n.left&&(i=e-(this.width+n.left+this.left)),o>l+this.height+n.right&&(s=o-(this.height+n.top+this.top)),[i,s])},this.getPointsArray=()=>{let t=[];return this.points&&typeof this.points=="object"&&this.points.length&&(t=this.points.map(i=>[i.x,i.y])),t}}return d});
